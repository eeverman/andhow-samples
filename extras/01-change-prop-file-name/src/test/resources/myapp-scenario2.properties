# ##########################################################################################
# Sample properties file generated by AndHow!
# strong.simple.valid.AppConfiguration  -  https://github.com/eeverman/andhow
# Note: When reading property names, matching is done in a case insensitive way, so 'Bob'
# 	would match 'bOB'.
# ##########################################################################################

# ##########################################################################################
# Property Group com.bigcorp.MissileLauncher.Config

#
# COUNT_DOWN (Integer)  - Number of seconds to count down from
# Default Value: 3
# The property value must be greater than 1
com.bigcorp.MissileLauncher.Config.COUNT_DOWN = 4

#
# ENABLE (Boolean)  - Set true to enable missile launch. Please set to false in TEST and
# 	QA environments!
# Default Value: false
com.bigcorp.MissileLauncher.Config.ENABLE = false

# ##########################################################################################
# Property Group com.bigcorp.DistanceCalculator.Config

#
# LATITUDE (BigDecimal) NON-NULL - Latitude in decimal degrees of missile base.
# The property value must:
# - be greater than or equal to -90
# - be less than or equal to 90
com.bigcorp.DistanceCalculator.Config.LATITUDE = 0

#
# LONGITUDE (BigDecimal) NON-NULL - Latitude in decimal degrees of missile base.
# The property value must:
# - be greater than or equal to -180
# - be less than or equal to 180
com.bigcorp.DistanceCalculator.Config.LONGITUDE = 0

# ##########################################################################################
# Property Group 'AndHow! Configuration Framework Configuration' - Configures how AndHow
# 	itself operates.
# Defined in org.yarnandtail.andhow.Options

#
# CREATE_SAMPLES (Boolean) NON-NULL - Forces configuration samples to be sent to the
# 	console for each loader that supports it.
# Recognized aliases: AHForceCreateSamples
# Default Value: false
# On cmdline, this works as a flag and is assumed 'true' just by being present. In other
# 	config sources it can be set to 'true'.
org.yarnandtail.andhow.Options.CREATE_SAMPLES = false

#
# SAMPLES_DIRECTORY (String) NON-NULL - Path to a directory to be used to write sample
# 	configuration to. The special 'java.io.tmpdir' string is recognized as the current Java
# 	temp directory.
# Default Value: java.io.tmpdir/andhow-samples/
# All paths should be specified w/ forward slashes, even on windows systems.
# The property value must end with '/'
org.yarnandtail.andhow.Options.SAMPLES_DIRECTORY = java.io.tmpdir/andhow-samples/

# ##########################################################################################
# Property Group 'JndiLoader Configuration' - Since JNDI providers use different base URIs
# 	to store entries, base URIs must be configurable. The most common URI roots are "java:",
# 	"java:comp/env/" or just "".To preserve whitespace or indicate an empty string, use
# 	double quotes around an individual comma separated value.If your container/provider uses
# 	something different, set one of these properties. All configured JNDI roots will be
# 	searched for each application property.Typically there are multiple roots to search and
# 	multiple forms of property names, leading to the possibility of duplicate/conflicting
# 	JNDI entries. If multiple entries are found in JNDI for a property, a runtime error is
# 	thrown at startup.
# Defined in org.yarnandtail.andhow.load.std.StdJndiLoader.CONFIG

#
# STANDARD_JNDI_ROOTS (String) NON-NULL - A comma separated list of standard JNDI root
# 	locations to be searched for properties. Setting this property will replace the standard
# 	list, use ADDED_JNDI_ROOTS to only add to the list.
# Default Value: java:comp/env/,java:,""
# The final JNDI URIs to be searched will look like this '[root][Property Name]'
org.yarnandtail.andhow.load.std.StdJndiLoader.CONFIG.STANDARD_JNDI_ROOTS = java:comp/env/,java:,""

#
# ADDED_JNDI_ROOTS (String)  - A comma separated list of JNDI root locations to be
# 	prepended to the standard list for searching. Setting this property does not affect the
# 	STANDARD_JNDI_ROOTS.
# The final JNDI URIs to be searched will look like this '[root][Property Name]'
org.yarnandtail.andhow.load.std.StdJndiLoader.CONFIG.ADDED_JNDI_ROOTS =

